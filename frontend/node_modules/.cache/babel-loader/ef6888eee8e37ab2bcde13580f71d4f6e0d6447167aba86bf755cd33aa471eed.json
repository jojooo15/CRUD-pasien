{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost/backend/api/patients\";\nconst getPatients = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/read.php`);\n    return response.data.patients;\n  } catch (error) {\n    console.error(\"Error fetching patients:\", error.response ? error.response.data : error);\n    throw error;\n  }\n};\nconst createPatient = async patientData => {\n  try {\n    const response = await axios.post(`${API_URL}/create.php`, patientData);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error creating patient:\", error.response ? error.response.data : error);\n    throw error;\n  }\n};\nconst deletePatient = async id => {\n  try {\n    const response = await axios.delete(`${API_URL}/delete.php?id=${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error deleting patient:\", error.response ? error.response.data : error);\n    throw error;\n  }\n};\nconst updatePatient = async patientData => {\n  try {\n    const response = await axios.put(`${API_URL}/update.php`, patientData, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error updating patient:\", error);\n    if (error.response) {\n      console.error(\"Error response data:\", error.response.data);\n      throw error.response.data;\n    }\n    throw error;\n  }\n};\nconst patientService = {\n  getPatients,\n  createPatient,\n  deletePatient,\n  updatePatient\n};\nexport default patientService;","map":{"version":3,"names":["axios","API_URL","getPatients","response","get","data","patients","error","console","createPatient","patientData","post","deletePatient","id","delete","updatePatient","put","headers","patientService"],"sources":["C:/xampp/htdocs/patient-data-app1/frontend/src/services/patientService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost/backend/api/patients\";\r\n\r\nconst getPatients = async () => {\r\n\ttry {\r\n\t\tconst response = await axios.get(`${API_URL}/read.php`);\r\n\t\treturn response.data.patients;\r\n\t} catch (error) {\r\n\t\tconsole.error(\r\n\t\t\t\"Error fetching patients:\",\r\n\t\t\terror.response ? error.response.data : error\r\n\t\t);\r\n\t\tthrow error;\r\n\t}\r\n};\r\n\r\nconst createPatient = async (patientData) => {\r\n\ttry {\r\n\t\tconst response = await axios.post(`${API_URL}/create.php`, patientData);\r\n\t\treturn response.data;\r\n\t} catch (error) {\r\n\t\tconsole.error(\r\n\t\t\t\"Error creating patient:\",\r\n\t\t\terror.response ? error.response.data : error\r\n\t\t);\r\n\t\tthrow error;\r\n\t}\r\n};\r\n\r\nconst deletePatient = async (id) => {\r\n\ttry {\r\n\t\tconst response = await axios.delete(`${API_URL}/delete.php?id=${id}`);\r\n\t\treturn response.data;\r\n\t} catch (error) {\r\n\t\tconsole.error(\r\n\t\t\t\"Error deleting patient:\",\r\n\t\t\terror.response ? error.response.data : error\r\n\t\t);\r\n\t\tthrow error;\r\n\t}\r\n};\r\n\r\nconst updatePatient = async (patientData) => {\r\n\ttry {\r\n\t\tconst response = await axios.put(`${API_URL}/update.php`, patientData, {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t});\r\n\t\treturn response.data;\r\n\t} catch (error) {\r\n\t\tconsole.error(\"Error updating patient:\", error);\r\n\t\tif (error.response) {\r\n\t\t\tconsole.error(\"Error response data:\", error.response.data);\r\n\t\t\tthrow error.response.data;\r\n\t\t}\r\n\t\tthrow error;\r\n\t}\r\n};\r\n\r\nconst patientService = {\r\n\tgetPatients,\r\n\tcreatePatient,\r\n\tdeletePatient,\r\n\tupdatePatient,\r\n};\r\n\r\nexport default patientService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uCAAuC;AAEvD,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC/B,IAAI;IACH,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,WAAW,CAAC;IACvD,OAAOE,QAAQ,CAACE,IAAI,CAACC,QAAQ;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACfC,OAAO,CAACD,KAAK,CACZ,0BAA0B,EAC1BA,KAAK,CAACJ,QAAQ,GAAGI,KAAK,CAACJ,QAAQ,CAACE,IAAI,GAAGE,KACxC,CAAC;IACD,MAAMA,KAAK;EACZ;AACD,CAAC;AAED,MAAME,aAAa,GAAG,MAAOC,WAAW,IAAK;EAC5C,IAAI;IACH,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACW,IAAI,CAAC,GAAGV,OAAO,aAAa,EAAES,WAAW,CAAC;IACvE,OAAOP,QAAQ,CAACE,IAAI;EACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACfC,OAAO,CAACD,KAAK,CACZ,yBAAyB,EACzBA,KAAK,CAACJ,QAAQ,GAAGI,KAAK,CAACJ,QAAQ,CAACE,IAAI,GAAGE,KACxC,CAAC;IACD,MAAMA,KAAK;EACZ;AACD,CAAC;AAED,MAAMK,aAAa,GAAG,MAAOC,EAAE,IAAK;EACnC,IAAI;IACH,MAAMV,QAAQ,GAAG,MAAMH,KAAK,CAACc,MAAM,CAAC,GAAGb,OAAO,kBAAkBY,EAAE,EAAE,CAAC;IACrE,OAAOV,QAAQ,CAACE,IAAI;EACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACfC,OAAO,CAACD,KAAK,CACZ,yBAAyB,EACzBA,KAAK,CAACJ,QAAQ,GAAGI,KAAK,CAACJ,QAAQ,CAACE,IAAI,GAAGE,KACxC,CAAC;IACD,MAAMA,KAAK;EACZ;AACD,CAAC;AAED,MAAMQ,aAAa,GAAG,MAAOL,WAAW,IAAK;EAC5C,IAAI;IACH,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACgB,GAAG,CAAC,GAAGf,OAAO,aAAa,EAAES,WAAW,EAAE;MACtEO,OAAO,EAAE;QACR,cAAc,EAAE;MACjB;IACD,CAAC,CAAC;IACF,OAAOd,QAAQ,CAACE,IAAI;EACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACfC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,IAAIA,KAAK,CAACJ,QAAQ,EAAE;MACnBK,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAAC;MAC1D,MAAME,KAAK,CAACJ,QAAQ,CAACE,IAAI;IAC1B;IACA,MAAME,KAAK;EACZ;AACD,CAAC;AAED,MAAMW,cAAc,GAAG;EACtBhB,WAAW;EACXO,aAAa;EACbG,aAAa;EACbG;AACD,CAAC;AAED,eAAeG,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}